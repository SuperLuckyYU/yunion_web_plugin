{
  "pageIndex": {
    "prefix": "pageIndex",
    "body": [
      "<template>",
      "\t<div>",
      "\t\t<page-header title=\"\" :tabs=\"cloudEnvOptions\" :current-tab.sync=\"cloudEnv\" />",
      "\t\t<page-body>",
      "\t\t\t<list :id=\"listId\" :cloud-env=\"cloudEnv\" :get-params=\"getParams\" />",
      "\t\t</page-body>",
      "\t</div>",
      "</template>\n",
      "<script>",
      "import List from './components/List'",
      "import { getCloudEnvOptions } from '@/utils/common/hypervisor'\n",
      "export default {",
      "\tname: '',",
      "\tcomponents: {",
      "\t\tList,",
      "\t},",
      "\tdata () {",
      "\t\treturn {",
      "\t\t\tlistId: '',",
      "\t\t\tcloudEnvOptions: getCloudEnvOptions('network_manage_brands'),",
      "\t\t\tcloudEnv: '',",
      "\t\t\tgetParams: {",
      "\t\t\t\tdetails: true,",
      "\t\t\t},",
      "\t\t}",
      "\t},",
      "}",
      "</script>\n"
    ],
    "description": "Code snippet for \"pageIndex\""
  },
  "pageList": {
    "prefix": "pageList",
    "body": [
      "<template>",
      "\t<page-list",
      "\t\t:list=\"list\"",
      "\t\t:columns=\"columns\"",
      "\t\t:single-actions=\"singleActions\"",
      "\t\t:group-actions=\"groupActions\" />",
      "</template>\n",
      "<script>",
      "import * as R from 'ramda'",
      "import ColumnsMixin from '../mixins/columns'",
      "import SingleActionsMixin from '../mixins/singleActions'",
      "import { getNameFilter } from '@/utils/common/tableFilter'",
      "import WindowsMixin from '@/mixins/windows'",
      "import ListMixin from '@/mixins/list'\n",
      "export default {",
      "\tname: '',",
      "\tmixins: [WindowsMixin, ListMixin, ColumnsMixin, SingleActionsMixin],",
      "\tprops: {",
      "\t\tid: String,",
      "\t\tgetParams: {",
      "\t\t\ttype: [Function, Object],",
      "\t\t},",
      "\t\tcloudEnv: String,",
      "\t},",
      "\tdata () {",
      "\t\treturn {",
      "\t\t\tlist: this.$list.createList(this, {",
      "\t\t\t\tid: this.id,",
      "\t\t\t\tresource: '',",
      "\t\t\t\tgetParams: this.getParam,",
      "\t\t\t\tfilterOptions: {",
      "\t\t\t\t\tname: getNameFilter(),",
      "\t\t\t\t},",
      "\t\t\t}),",
      "\t\t\tgroupActions: [",
      "\t\t\t\t{",
      "\t\t\t\t\tlabel: '新建',",
      "\t\t\t\t\taction: () => {",
      "\t\t\t\t\t\tthis.createDialog('', {",
      "\t\t\t\t\t\t\ttitle: '新建',",
      "\t\t\t\t\t\t\tdata: this.list.selectedItems,",
      "\t\t\t\t\t\t\tlist: this.list,",
      "\t\t\t\t\t\t})",
      "\t\t\t\t\t},",
      "\t\t\t\t\tmeta: () => {",
      "\t\t\t\t\t\treturn {",
      "\t\t\t\t\t\t\tbuttonType: 'primary',",
      "\t\t\t\t\t\t}",
      "\t\t\t\t\t},",
      "\t\t\t\t},",
      "\t\t\t\t{",
      "\t\t\t\t\tlabel: '删除',",
      "\t\t\t\t\tpermission: '',",
      "\t\t\t\t\taction: () => {",
      "\t\t\t\t\t\tthis.createDialog('DeleteResDialog', {",
      "\t\t\t\t\t\t\ttitle: '删除',",
      "\t\t\t\t\t\t\tdata: this.list.selectedItems,",
      "\t\t\t\t\t\t\tcolumns: this.columns,",
      "\t\t\t\t\t\t\tlist: this.list,",
      "\t\t\t\t\t\t})",
      "\t\t\t\t\t},",
      "\t\t\t\t\tmeta: () => {",
      "\t\t\t\t\t\treturn {",
      "\t\t\t\t\t\t\tvalidate: this.list.allowDelete(),",
      "\t\t\t\t\t\t}",
      "\t\t\t\t\t},",
      "\t\t\t\t},",
      "\t\t\t],",
      "\t\t}",
      "\t},",
      "\twatch: {",
      "\t\tcloudEnv (val) {",
      "\t\t\tthis.$nextTick(() => {",
      "\t\t\t\tthis.initSidePageTab('disk-detail')",
      "\t\t\t\tthis.list.fetchData()",
      "\t\t\t})",
      "\t\t},",
      "\t},",
      "\tcreated () {",
      "\t\tthis.initSidePageTab('')",
      "\t\tthis.list.fetchData()",
      "\t},",
      "\tmethods: {",
      "\t\tgetParam () {",
      "\t\t\tconst ret = {",
      "\t\t\t\t...(R.is(Function, this.getParams) ? this.getParams() : this.getParams),",
      "\t\t\t}",
      "\t\t\tif (this.cloudEnv) ret.cloud_env = this.cloudEnv",
      "\t\t\treturn ret",
      "\t\t},",
      "\t\thandleOpenSidepage (row) {",
      "\t\t\tthis.sidePageTriggerHandle(this, 'DiskSidePage', {",
      "\t\t\t\tid: row.id,",
      "\t\t\t\tresource: 'disks',",
      "\t\t\t\tgetParams: this.getParam,",
      "\t\t\t}, {",
      "\t\t\t\tlist: this.list,",
      "\t\t\t})",
      "\t\t},",
      "\t},",
      "}",
      "</script>\n"
    ],
    "description": "Code snippet for \"pageList\""
  },
  "sidepageIndex": {
    "prefix": "sidepageIndex",
    "body": [
      "<template>",
      "\t<base-side-page",
      "\t\t@cancel=\"cancelSidePage\"",
      "\t\ttitle=\"\"",
      "\t\ticon=\"\"",
      "\t\t:res-name=\"detailData.name\"",
      "\t\t:current-tab=\"params.windowData.currentTab\"",
      "\t\t:tabs=\"detailTabs\"",
      "\t\t@tab-change=\"handleTabChange\">",
      "\t\t<template v-slot:actions>",
      "\t\t\t<actions :options=\"singleActions\" :row=\"detailData\" button-type=\"link\" button-size=\"small\" />",
      "\t\t</template>",
      "\t\t<component :is=\"params.windowData.currentTab\" :res-id=\"params.resId\" :data=\"detailData\" :getParams=\"getParams\" :on-manager=\"onManager\" />",
      "\t</base-side-page>",
      "</template>\n",
      "<script>",
      "import SingleActionsMixin from '../mixins/singleActions'",
      "import ColumnsMixin from '../mixins/columns'",
      "import Detail from './Detail'",
      "import SidePageMixin from '@/mixins/sidePage'",
      "import WindowsMixin from '@/mixins/windows'",
      "import Actions from '@/components/PageList/Actions'\n",
      "export default {",
      "\tname: '',",
      "\tcomponents: {",
      "\t\tDetail",
      "\t\tActions,",
      "\t},",
      "\tmixins: [SidePageMixin, WindowsMixin, ColumnsMixin, SingleActionsMixin],",
      "\tdata () {",
      "\t\treturn {",
      "\t\t\tdetailTabs: [",
      "\t\t\t\t{ label: this.$t('compute.text_238'), key: 'detail' },",
      "\t\t\t\t{ label: this.$t('compute.text_240'), key: 'event-drawer' },",
      "\t\t\t],",
      "\t\t}",
      "\t},",
      "\tcomputed: {",
      "\t\tgetParams () {",
      "\t\t\treturn null",
      "\t\t},",
      "\t},",
      "}",
      "</script>\n"
    ],
    "description": "Code snippet for \"sidepageIndex\""
  },
  "sidepageDetail": {
    "prefix": "sidepageDetail",
    "body": [
      "<template>",
      "\t<detail",
      "\t\t:on-manager=\"onManager\"",
      "\t\t:data=\"data\"",
      "\t\t:base-info=\"baseInfo\"",
      "\t\t:extra-info=\"extraInfo\"",
      "\t\tresource=\"\"",
      "\t\tstatus-module=\"\" />",
      "</template>\n",
      "<script>",
      "import {",
      "\tgetCopyWithContentTableColumn,",
      "} from '@/utils/common/tableColumn'",
      "import WindowsMixin from '@/mixins/windows'\n",
      "export default {",
      "\tname: '',",
      "\tmixins: [WindowsMixin],",
      "\tprops: {",
      "\t\tdata: {",
      "\t\t\ttype: Object,",
      "\t\t\trequired: true,",
      "\t\t},",
      "\t\tonManager: {",
      "\t\t\ttype: Function,",
      "\t\t\trequired: true,",
      "\t\t},",
      "\t},",
      "\tdata () {",
      "\t\treturn {",
      "\t\t\tbaseInfo: [",
      "\t\t\t\t${0:// body}",
      "\t\t\t],",
      "\t\t\textraInfo: [",
      "\t\t\t\t{",
      "\t\t\t\t\ttitle: '其他信息',",
      "\t\t\t\t\titems: [",
      "\t\t\t\t\t\t${0:// body}",
      "\t\t\t\t\t],",
      "\t\t\t\t},",
      "\t\t\t],",
      "\t\t}",
      "\t},",
      "}",
      "</script>\n"
    ],
    "description": "Code snippet for \"sidepageDetail\""
  },
  "dialogCreate": {
    "prefix": "dialog",
    "body": [
      "<template>",
      "\t<base-dialog @cancel=\"cancelDialog\">",
      "\t\t<div slot=\"header\">{{params.title}}</div>",
      "\t\t<div slot=\"body\">",
      "\t\t\t<dialog-selected-tips :name=\"$t('dictionary.network')\" :count=\"params.data.length\" :action=\"params.title\" />",
      "\t\t\t<dialog-table class=\"mb-2\" :data=\"params.data\" :columns=\"params.columns.slice(0, 3)\" />",
      "\t\t\t<a-form",
      "\t\t\t\t:form=\"form.fc\">",
      "\t\t\t\t<a-form-item label=\"名称\" v-bind=\"formItemLayout\">",
      "\t\t\t\t\t<a-input v-decorator=\"decorators.name\" placeholder=\"字母开头，数字和字母大小写组合，长度为2-20个字符，可含'-','_'\" />",
      "\t\t\t\t</a-form-item>",
      "\t\t\t</a-form>",
      "\t\t</div>",
      "\t\t<div slot=\"footer\">",
      "\t\t\t<a-button type=\"primary\" @click=\"handleConfirm\" :loading=\"loading\">{{ $t('dialog.ok') }}</a-button>",
      "\t\t\t<a-button @click=\"cancelDialog\">{{ $t('dialog.cancel') }}</a-button>",
      "\t\t</div>",
      "\t</base-dialog>",
      "</template>\n",
      "<script>",
      "import { mapGetters } from 'vuex'",
      "import DialogMixin from '@/mixins/dialog'",
      "import WindowsMixin from '@/mixins/windows'\n",
      "export default {",
      "\tname: '',",
      "\tmixins: [DialogMixin, WindowsMixin],",
      "\tdata () {",
      "\t\treturn {",
      "\t\t\tloading: false,",
      "\t\t\tform: {",
      "\t\t\t\tfc: this.$form.createForm(this),",
      "\t\t\t},",
      "\t\t\tdecorators: {",
      "\t\t\t\tname: [",
      "\t\t\t\t\t'name',",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\tvalidateFirst: true,",
      "\t\t\t\t\t\tvalidateTrigger: ['blur'],",
      "\t\t\t\t\t\trules: [",
      "\t\t\t\t\t\t\t{ required: true, message: '请输入名称' },",
      "\t\t\t\t\t\t],",
      "\t\t\t\t\t},",
      "\t\t\t\t],",
      "\t\t\t},",
      "\t\t\tformItemLayout: {",
      "\t\t\t\twrapperCol: {",
      "\t\t\t\t\tspan: 21,",
      "\t\t\t\t},",
      "\t\t\t\tlabelCol: {",
      "\t\t\t\t\tspan: 3,",
      "\t\t\t\t},",
      "\t\t\t},",
      "\t\t}",
      "\t},",
      "\tcomputed: {",
      "\t\t...mapGetters(['isAdminMode', 'scope', 'userInfo']),",
      "\t},",
      "\tmethods: {",
      "\t\tdoCreate (data) {",
      "\t\t\treturn this.params.onManager('create', {",
      "\t\t\t\tmanagerArgs: {",
      "\t\t\t\t\tdata,",
      "\t\t\t\t},",
      "\t\t\t})",
      "\t\t},",
      "\t\tasync handleConfirm () {",
      "\t\t\tthis.loading = true",
      "\t\t\ttry {",
      "\t\t\t\tconst values = await this.form.fc.validateFields()",
      "\t\t\t\tawait this.doCreate(values)",
      "\t\t\t\tthis.loading = false",
      "\t\t\t\tthis.cancelDialog()",
      "\t\t\t\tthis.params.refresh()",
      "\t\t\t} catch (error) {",
      "\t\t\t\tthis.loading = false",
      "\t\t\t}",
      "\t\t},",
      "\t},",
      "}",
      "</script>\n"
    ],
    "description": "Code snippet for \"dialogCreate\""
  },
  "field": {
    "prefix": "fi",
    "body": [
      "field"
    ],
    "description": "Code snippet for 'field'"
  },
  "validator": {
    "prefix": "vali",
    "body": [
      "validator"
    ],
    "description": "Code snippet for 'validator'"
  },
  "formatter": {
    "prefix": "format",
    "body": [
      "formatter: ({ cellValue, row }) => {",
      "\t${0:// body}",
      "},"
    ],
    "description": "Code snippet for 'formatter'"
  }
}